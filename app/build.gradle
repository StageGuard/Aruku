plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id "com.google.protobuf" version "0.8.17"
    id 'kotlin-parcelize'
}

android {
    compileSdk 33

    defaultConfig {
        applicationId "me.stageguard.aruku"
        minSdk 26
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            buildConfigField("boolean", "LOG_DEBUG", "false")
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion compose_version
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
            merges += '/META-INF/INDEX.LIST'
            merges += '/META-INF/io.netty.versions.properties'
        }
    }
}

dependencies {
    // jetpack
    implementation 'androidx.core:core-ktx:1.9.0'
    implementation 'androidx.activity:activity-compose:1.5.1'
    implementation 'androidx.navigation:navigation-compose:2.5.2'

    // jetpack compose
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    implementation("androidx.compose.material:material-icons-core:$compose_version")
    implementation("androidx.compose.material:material-icons-extended:$compose_version")
    implementation 'androidx.compose.material3:material3:1.0.0-beta02'
    implementation "androidx.compose.runtime:runtime-livedata:1.2.1"

    // jetpack lifecycle
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-service:$lifecycle_version"

    // jetpack datastore
    implementation 'androidx.datastore:datastore:1.0.0'
    implementation 'com.google.protobuf:protobuf-javalite:3.21.5'

    // accompanist
    implementation 'com.google.accompanist:accompanist-permissions:0.26.2-beta'

    // mirai
    // version 2.13.0-dev-657b414c just supports mocking framework
    runtimeOnly("net.mamoe:mirai-core-android:$mirai_version") {
        exclude module: 'atomicfu', group: 'org.jetbrains.kotlinx'
    }
    api "net.mamoe:mirai-core-api-android:$mirai_version"
    implementation "net.mamoe:mirai-core-utils-android:$mirai_version"

    implementation 'org.bouncycastle:bcpkix-jdk15on:1.70'
    implementation 'org.bouncycastle:bcprov-jdk15on:1.70'

    // kotlin
    implementation 'org.jetbrains.kotlinx:atomicfu:0.18.3'
    implementation 'io.coil-kt:coil-compose:2.2.1'


    // test
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    androidTestImplementation "net.mamoe:mirai-core-mock:$mirai_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_version"
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:3.14.0"
    }

    // Generates the java Protobuf-lite code for the Protobufs in this project. See
    // https://github.com/google/protobuf-gradle-plugin#customizing-protobuf-compilation
    // for more information.
    generateProtoTasks {
        all().each { task ->
            task.builtins {
                java {
                    option 'lite'
                }
            }
        }
    }
}